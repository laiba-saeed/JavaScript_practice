const connection = require("../models");
const mongodb = require("mongodb");
connection();

const users = [];

// Insert record into database
async function post (req, res) { console.log(req.body);
   try{
    const { name, email, phone_number } = req.body;
    if(!name || !email || !phone_number) {
        return res.status(400).send("Required fields can't be empty") 
    }
    const db = await connection();
    // COllection in database by name user
    const createdUser = db.collection("users").insertOne({
        name: name,
        email: email,
        phone_number: phone_number
   });
   res.status(201).send({ createdUser: createdUser})

   } catch (err) {
    console.log(err);
    res.status(500).send("Something went wrong");
   }
}

// Fetch Record from Database
async function getAll(req, res) {
    try{
        const db = await connection();
        const user = await db.collection("users").findOne({
            // Id is generated by mongodb and is instance of class => ObjectId in mongodb
            _id: new mongodb.ObjectId("6311fd0355f9426206ecacd8")
        });
        res.status(200).send({ user })
    } catch (err) {
        console.log(err);
        res.status(500).send("Something went wrong!")
    }
}

function getSIngle(req, res) {
    const { userId }  = req.params;
    const result = users[userId];
    if (!result) {
        return res.status(400).send("Invalid user Id");
    }
    res.status(200).send({ user: result })
}

function update(req, res) {
    const { name } = req.body;
    const { userId } = req.params; 

    const result = users[userId];
    if(!result) {
        return res.status(400).send("Invalid users Id");
    }
    users[userId] = name;
    res.status(201).send({ users })
}

function deleteuser(req, res) {
    const {userId} = req.params;
    const result = users[userId];
    if(!result) {
        return res.status(400).send("Invalid users Id");
    }
    users.splice(userId, 1);
    res.status(200).send({ users })
}

module.exports = {
    post,
    getAll,
    getSIngle,
    update, 
    deleteuser
}